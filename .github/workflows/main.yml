name: Main Branch Event

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  poc-build:
    defaults:
      run:
        working-directory: poc
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Install dependencies
      run: npm ci
    - name: Test building the application
      run: npm run build
    - name: Run the unit tests
      run: npm test
    - name: Save website artifacts
      uses: actions/upload-artifact@v2
      with:
        name: demo-website
        path: ${{ github.workspace }}/poc/dist
        if-no-files-found: error

  gh-pages-deploy:
    needs: poc-build
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
    - name: Setup independent git worktree to receive artifacts
      run: ./scripts/deploy_gh_pages_setup.sh "poc/dist"
    - name: Download website artifacts
      uses: actions/download-artifact@v2
      with:
        name: demo-website
        path: ${{ github.workspace }}/poc/dist
    - name: Deploy gh-pages website
      run: ./scripts/deploy_gh_pages_push_and_clean.sh "poc/dist"

  fp-cppcheck:
    defaults:
      run:
        working-directory: fixed_point
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install cppcheck
      run: sudo apt-get install cppcheck -y
    - name: Run an analysis of the code
      run: make check

  fp-build:
    defaults:
      run:
        working-directory: fixed_point
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install googletest, google-mock
      run: >
        sudo apt-get install -y
        googletest
        libgtest-dev
        google-mock
        libgmock-dev
    - name: Compile the code
      run: make -j
    - name: Run the Unit Tests
      run: make test

  hw-build:
    defaults:
      run:
        working-directory: hardware_design
    runs-on: ubuntu-latest
    container: ghdl/vunit:gcc
    steps:
    - uses: actions/checkout@v2
    - name: Run the Unit Tests
      run: python3 run.py
